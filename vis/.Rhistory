ggplot(dq, aes(x = capacity_scenario, y = capacity_per_area_mbps/sqkm,
fill = Constellation)) + geom_boxplot()
View(dq)
dq$Constellation = factor(dq$constellation)
dq$capacity_scenario = factor(dq$capacity_scenario,
levels=c('Low', 'Baseline', 'High'))
rcv_box <- ggplot(dq, aes(x = capacity_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation))
dq$Constellation = factor(dq$constellation)
dq$capacity_scenario = factor(dq$capacity_scenario,
levels=c('Low', 'Baseline', 'High'))
rcv_box <- ggplot(dq, aes(x = capacity_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot()
ggplot(dq, aes(x = capacity_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot()
ggplot(dq, aes(x = capacity_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired")
dq$Constellation = factor(dq$constellation)
dq$demand_scenario = factor(dq$demand_scenario,
levels=c('Low', 'Baseline', 'High'))
rcv_box <- ggplot(dq, aes(x = demand_scenario, y = demand_density_mbps_sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white")
ggplot(dq, aes(x = demand_scenario, y = demand_density_mbps_sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white")
ggplot(dq, aes(x = demand_scenario, y = demand_density_mbps_sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white")
dq$Constellation = factor(dq$constellation)
dq$demand_scenario = factor(dq$demand_scenario,
levels=c('Low', 'Baseline', 'High'))
rcv_box <- ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "sd", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "median", geom = "point",shape = 8,
size = 1, color = "white")
ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "quantile", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired")
rcv_box <- ggplot(dq, aes(x = demand_scenario, y = capacity_per_area_mbps.sqkm,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "quantile", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per Area") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
rcv_box
dq$Constellation = factor(dq$constellation)
dq$cnr_scenario = factor(dq$cnr_scenario,
levels=c('Low', 'Baseline', 'High'))
cnr_box <- ggplot(dq, aes(x = cnr_scenario, y = cnr,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-noise ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
cnr_box
aq <- ggplot(dpp, aes(x = signal_path_scenario, y = Altitude,
fill = Constellation)) + geom_boxplot(varwidth = TRUE) +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Altitude (km)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
aq
library(ggplot2)
#Load the data
dq <- read.csv("/Users/osoro/GitHub/saleos/results/uq_results.csv")
dq
# Select the emission columns to plot
dpp <- select(dq, constellation, altitude_km, signal_path_scenario,
dl_frequency_Hz, center_frequency,
receiver_gain_db, receiver_gain_scenario,
earth_atmospheric_losses_dB, atmospheric_loss_scenario,
cnr, cnr_scenario,
adoption_rate, adoption_scenario,
total_cost_ownership, satellite_launch_scenario,
ground_station_cost, ground_station_cost_scenario)
dqq <- select(dq, constellation, constellation_capacity,
capacity_scenario, capacity_per_area_mbps.sqkm,
demand_scenario, cost_per_capacity, cost_scenario)
# Rename the Columns
names(dpp)[names(dpp) == "constellation"] <- "Constellation"
names(dpp)[names(dpp) == "altitude_km"] <- "Altitude"
names(dpp)[names(dpp) == "signal_path_scenario"] <- "signal_scenario"
names(dpp)[names(dpp) == "dl_frequency_Hz"] <- "Frequency"
names(dpp)[names(dpp) == "receiver_gain_db"] <- "Receiver_Gain"
names(dpp)[names(dpp) == "earth_atmospheric_losses_dB"] <- "Losses"
names(dpp)[names(dpp) == "cnr"] <- "CNR"
names(dpp)[names(dpp) == "adoption_rate"] <- "Adoption_Rate"
names(dpp)[names(dpp) == "total_cost_ownership"] <- "total_cost_ownership"
names(dpp)[names(dpp) == "ground_station_cost"] <- "Ground_Station_Cost"
names(dqq)[names(dqq) == "constellation"] <- "Constellation"
names(dqq)[names(dqq) == "constellation_capacity"] <- "Constellation_Capacity"
names(dqq)[names(dqq) == "capacity_scenario"] <- "Capacity_Scenario"
names(dqq)[names(dqq) == "capacity_per_area_mbps.sqkm"] <- "Demand_Density"
names(dqq)[names(dqq) == "demand_scenario"] <- "Demand_Scenario"
names(dqq)[names(dqq) == "cost_per_capacity"] <- "Cost_per_Capacity"
names(dqq)[names(dqq) == "cost_scenario"] <- "Cost_Scenario"
aq <- ggplot(dpp, aes(x = signal_path_scenario, y = Altitude,
fill = Constellation)) + geom_boxplot(varwidth = TRUE) +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Altitude (km)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
aq
ggplot(dpp, aes(x = center_frequency, y = Frequency,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Frequency (GHz)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dpp, aes(x = receiver_gain_scenario, y = Receiver_Gain,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Receiver Gain (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dpp, aes(x = atmospheric_loss_scenario, y = Losses,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Atmospheric Losses (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE)
ggplot(dpp, aes(x = atmospheric_loss_scenario, y = Losses,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Atmospheric Losses (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE)
ggplot(dpp, aes(x = atmospheric_loss_scenario, y = Losses,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white")
ggplot(dpp, aes(x = cnr_scenario, y = CNR,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-Noise Ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dpp, aes(x = adoption_scenario, y = Adoption_Rate,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Adoption Rate") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dpp, aes(x = satellite_launch_scenario,
y = total_cost_ownership, fill = Constellation)) +
geom_boxplot() +  stat_summary(fun = "mean", geom = "point",
shape = 8, size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Satellite Launch Cost") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dpp, aes(x = ground_station_cost_scenario,
y = Ground_Station_Cost, fill = Constellation)) +
geom_boxplot() +  stat_summary(fun = "mean", geom = "point",
shape = 8, size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Satellite Launch Cost") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dqq, aes(x = Capacity_Scenario, y = Constellation_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Constellation Capacity (Tbps)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggplot(dqq, aes(x = Demand_Scenario, y = Demand_Density,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per area (Mbps/km^2)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq <- ggplot(dqq, aes(x = Cost_Scenario, y = Cost_per_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Cost per Capacity (US$ millions)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq
dqq$Cost_Scenario = factor(dqq$Cost_Scenario,
levels=c('Low', 'Baseline', 'High'))
ctq <- ggplot(dqq, aes(x = Cost_Scenario, y = Cost_per_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Cost per Capacity (US$ millions)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq
ggarrange(cq, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
source("~/GlobViz/uq_plots.R", echo=TRUE)
dq$Constellation = factor(dq$constellation)
dq$cnr_scenario = factor(dq$cnr_scenario,
levels=c('Low', 'Baseline', 'High'))
cnr_box <- ggplot(dq, aes(x = cnr_scenario, y = cnr,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-noise ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
cnr_box
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
dq$Cost_Scenario = factor(dq$Cost_Scenario,
levels=c('Low', 'Baseline', 'High'))
ctq <- ggplot(dqq, aes(x = Cost_Scenario, y = Cost_per_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Cost per Capacity (US$ millions)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
dqq$Cost_Scenario = factor(dqq$Cost_Scenario,
levels=c('Low', 'Baseline', 'High'))
ctq <- ggplot(dqq, aes(x = Cost_Scenario, y = Cost_per_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Cost per Capacity (US$ millions)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
dqq$Demand_Scenario = factor(dqq$Demand_Scenario,
levels=c('Low', 'Baseline', 'High'))
dq <- ggplot(dqq, aes(x = Demand_Scenario, y = Demand_Density,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per area (Mbps/km^2)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
dqq$Constellation = factor(dqq$constellation)
dqq$cnr_scenario = factor(dqq$cnr_scenario,
levels=c('Low', 'Baseline', 'High'))
cnr_box <- ggplot(dqq, aes(x = cnr_scenario, y = cnr,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-noise ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
cnr_box
dq <- read.csv("/Users/osoro/GitHub/saleos/results/uq_results.csv")
dqq <- select(dq, constellation, constellation_capacity,cnr_scenario,
capacity_scenario, capacity_per_area_mbps.sqkm,cnr,
demand_scenario, cost_per_capacity, cost_scenario)
# Rename the Columns
names(dqq)[names(dqq) == "constellation"] <- "Constellation"
names(dqq)[names(dqq) == "constellation_capacity"] <- "Constellation_Capacity"
names(dqq)[names(dqq) == "capacity_scenario"] <- "Capacity_Scenario"
names(dqq)[names(dqq) == "capacity_per_area_mbps.sqkm"] <- "Demand_Density"
names(dqq)[names(dqq) == "demand_scenario"] <- "Demand_Scenario"
names(dqq)[names(dqq) == "cost_per_capacity"] <- "Cost_per_Capacity"
names(dqq)[names(dqq) == "cost_scenario"] <- "Cost_Scenario"
dqq$Constellation = factor(dqq$constellation)
dqq$cnr_scenario = factor(dqq$cnr_scenario,
levels=c('Low', 'Baseline', 'High'))
cnr_box <- ggplot(dqq, aes(x = cnr_scenario, y = cnr,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-noise ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
cnr_box
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
ggplot(dqq, aes(x = Demand_Scenario, y = Demand_Density,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per area (Mbps/km^2)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
dq <- ggplot(dqq, aes(x = Demand_Scenario, y = Demand_Density,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per area (Mbps/km^2)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
dqq$Cost_Scenario = factor(dqq$Cost_Scenario,
levels=c('Low', 'Baseline', 'High'))
ctq <- ggplot(dqq, aes(x = Cost_Scenario, y = Cost_per_Capacity/1e6,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Cost per Capacity (US$ millions)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ctq
dqq$Constellation = factor(dqq$constellation)
dqq$cnr_scenario = factor(dqq$cnr_scenario,
levels=c('Low', 'Baseline', 'High'))
cnr_box <- ggplot(dqq, aes(x = cnr_scenario, y = cnr,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "range", geom = "point",shape = 8,
size = 1, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Carrier-to-noise ratio (dB)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
cnr_box
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
dqq$Demand_Scenario = factor(dqq$Demand_Scenario,
levels=c('Low', 'Baseline', 'High'))
dq <- ggplot(dqq, aes(x = Demand_Scenario, y = Demand_Density,
fill = Constellation)) + geom_boxplot() +
stat_summary(fun = "mean", geom = "point",shape = 8,
size = 2, color = "white") +
scale_fill_brewer(palette = "Paired") + theme_bw() +
theme(panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black")) +
labs(colour=NULL, title = NULL,
x = " ", y = "Capacity per area (Mbps/km^2)") +
scale_y_continuous(labels = function(y) format(y, scientific = FALSE))
ggarrange(cnr_box, dq, ctq, ncol = 3,
common.legend = T, legend="bottom",
labels = c("A", "B","C"), align = c("hv"))
